/*
 * Copyright 2016-2020 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license.
 */

// Configures generation of JavaDoc & Dokka artifacts

def makeLinkMapping(pass, projectDir) {
    pass.sourceLink {
        def relPath = rootProject.projectDir.toPath().relativize(projectDir.toPath())
        path = "$projectDir/src"
        url = "https://github.com/kotlin/kotlinx.coroutines/tree/master/$relPath/src"
        lineSuffix = "#L"
    }
}

def configurePass(pass, projectDir, name) {
    pass.jdkVersion = 8
    pass.includes = ['README.md']
    pass.noStdlibLink = true
    pass.externalDocumentationLink {
        packageListUrl = rootProject.projectDir.toPath().resolve("site/stdlib.package.list").toUri().toURL()
        url = new URL("https://kotlinlang.org/api/latest/jvm/stdlib/")
    }
    makeLinkMapping(pass, projectDir)
    makeLinkMapping(pass, project.file(name))
    pass.sourceRoot {
        path = rootProject.file("$project.name/$name/src")
    }
    pass.classpath = new ArrayList(project.configurations.dokkaStubs.files +
            project.configurations.jvmCompileClasspath.files +
            project.kotlin.targets.jvm.compilations.main.output.allOutputs)
}

configurations {
    dokkaStubs.extendsFrom compileOnly
    configureKotlinJvmPlatform(dokkaStubs)
}

apply plugin: 'org.jetbrains.dokka'

dependencies {
    dokkaStubs project(":stdlib-stubs")
}
if (project.name == "kotlinx-coroutines-core") {
    // Custom configuration for MPP modules
    dependencies {
        dokkaStubs project(":js-stub") // so that JS library reference can resolve properly
        dokkaStubs project(":kotlinx-coroutines-core")
    }
}

dokka {
    outputFormat = 'html'
    dependsOn(project.configurations.dokkaStubs)
    if (project.name != "kotlinx-coroutines-core") {
        configuration {
            jdkVersion = 8
            includes = ['README.md']
            noStdlibLink = true
            externalDocumentationLink {
                packageListUrl = rootProject.projectDir.toPath().resolve("site/stdlib.package.list").toUri().toURL()
                url = new URL("https://kotlinlang.org/api/latest/jvm/stdlib/")
            }
            doFirst {
                classpath = new ArrayList(project.configurations.dokkaStubs.files + project.configurations.compileClasspath.files + project.sourceSets.main.output.files)
            }
        }
        dependsOn(project.configurations.compileClasspath)
        dependsOn(project.sourceSets.main.output)
    } else {
        impliedPlatforms = ['JVM', 'JS', 'Native']
        dokkaSourceSets {
            commonMain {
                configurePass(it, projectDir, "common")
            }
            jvmMain {
                configurePass(it, projectDir, "jvm")
            }
            jsMain {
                configurePass(it, projectDir, "js")
            }
            nativeMain {
                configurePass(it, projectDir, "native")
            }
        }
    }
}